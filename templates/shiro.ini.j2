# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

[main]
# Development
ssl.enabled = false

passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

# plainMatcher=org.apache.shiro.authc.credential.SimpleCredentialsMatcher
#iniRealm=org.apache.shiro.realm.text.IniRealm
iniRealm.credentialsMatcher = $passwordMatcher

localhostFilter=org.apache.jena.fuseki.authz.LocalhostFilter

[users]
# Implicitly adds "iniRealm =  org.apache.shiro.realm.text.IniRealm"
# password "pw" set with shiro-tools-hasher with commands
# mvn dependency:get -DgroupId=org.apache.shiro.tools -DartifactId=shiro-tools-hasher -Dclassifier=cli -Dversion=2.0.1
# java -jar ./repository/org/apache/shiro/tools/shiro-tools-hasher/2.0.1/shiro-tools-hasher-2.0.1-cli.jar -p
#password has to be quoted to correctly pick up parameters https://github.com/apache/shiro/issues/1385

{% for user in fuseki_shiro_users %}
{{user.name}}="{{ user.password_stanza }}"

{% endfor %}
[roles]
test= /$/status
{{ fuseki_shiro_roles_section | default('') }}
[urls]
## Control functions open to anyone
# /$/status  = authcBasic,user[test]
/$/server  = anon
/$/ping    = anon
/$/metrics = anon

## and the rest are restricted to localhost.
/$/** = localhostFilter

# custom rules added by ansible
# can override all rules above if defineed
{{ fuseki_shiro_url_rules | default('') }}

## If you want simple, basic authentication user/password
## on the operations,
##    1 - set a better password in [users] above.
##    2 - comment out the "/$/** = localhost" line and use:
## "/$/** = authcBasic,user[admin]"

## or to allow any access.
##/$/** = anon

# Everything else
/**=anon

